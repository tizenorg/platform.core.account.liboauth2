
SET(PREFIX ${CMAKE_INSTALL_PREFIX})
SET(EXEC_PREFIX "\${prefix}")
#SET(LIBDIR "\${prefix}/lib")
#SET(INCLUDEDIR "\${prefix}/include ")
SET(VERSION_MAJOR 0)
SET(VERSION "${VERSION_MAJOR}.0.1")

SET(SRCS
	oauth2_error.c
	oauth2_manager.c
	oauth2_request.c
	oauth2_response.c
	oauth2_util.c
)

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src)

if(DEFINED EXCLUDE_EWK_ERR)
    add_definitions(-DWITHOUT_EWK_ERROR)
endif()

INCLUDE(FindPkgConfig)
pkg_check_modules(clientpkgs REQUIRED dlog capi-base-common libcurl efl-extension ecore evas chromium-efl json-glib-1.0 elementary)
FOREACH(flag ${clientpkgs_CFLAGS})
	SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} ${flag}")
ENDFOREACH(flag)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${EXTRA_CFLAGS} -Wall -Werror")
SET(CMAKE_LDFLAGS "-Wl,-zdefs")

ADD_DEFINITIONS("-DPREFIX=\"${CMAKE_INSTALL_PREFIX}\"")
ADD_DEFINITIONS("-DFACTORYFS=\"$ENV{FACTORYFS}\"")
ADD_DEFINITIONS("-DSLP_DEBUG")


ADD_LIBRARY(${PROJECT_NAME} SHARED ${SRCS})
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES SOVERSION ${VERSION_MAJOR})
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES VERSION ${VERSION})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${clientpkgs_LDFLAGS})

#INSTALL(TARGETS ${PROJECT_NAME} DESTINATION lib)
INSTALL(TARGETS ${PROJECT_NAME} DESTINATION ${LIBDIR})
CONFIGURE_FILE(oauth2.pc.in ../oauth2.pc @ONLY)
#INSTALL(FILES ${CMAKE_BINARY_DIR}/oauth2.pc DESTINATION lib/pkgconfig)
INSTALL(FILES ${CMAKE_BINARY_DIR}/oauth2.pc DESTINATION ${LIBDIR}/pkgconfig)

INSTALL(FILES ${CMAKE_SOURCE_DIR}/include/oauth2.h DESTINATION include)
INSTALL(FILES ${CMAKE_SOURCE_DIR}/include/oauth2_manager.h DESTINATION include)
INSTALL(FILES ${CMAKE_SOURCE_DIR}/include/oauth2_request.h DESTINATION include)
INSTALL(FILES ${CMAKE_SOURCE_DIR}/include/oauth2_response.h DESTINATION include)
INSTALL(FILES ${CMAKE_SOURCE_DIR}/include/oauth2_error.h DESTINATION include)
INSTALL(FILES ${CMAKE_SOURCE_DIR}/include/oauth2_types.h DESTINATION include)
